plugins {
    id 'org.jetbrains.kotlin.multiplatform'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.24'
}

group = "com.deduction"
version = "1.0.0"

kotlin {

    def hostOs = System.getProperty("os.name")
    def isArm64 = System.getProperty("os.arch") == "aarch64"
    def isMingwX64 = hostOs.startsWith("Windows")

    def nativeTargetName = 'native'
    def nativeTarget = linuxX64(nativeTargetName)
    if (hostOs == "Mac OS X" && isArm64) {
        nativeTarget = macosArm64(nativeTargetName)
    } else if (hostOs == "Mac OS X" && !isArm64) {
        nativeTarget = macosX64(nativeTargetName)
    } else if (hostOs == "Linux" && isArm64) {
        nativeTarget = linuxArm64(nativeTargetName)
    } else if (hostOs == "Linux" && !isArm64) {
        nativeTarget = linuxX64(nativeTargetName)
    } else if (isMingwX64) {
        nativeTarget = mingwX64(nativeTargetName)
    } else {
        throw new GradleException("Host OS is not supported in Kotlin/Native.")
    }

    nativeTarget.binaries {
        executable {
            entryPoint = 'main'
        }
    }

    sourceSets {
        nativeMain {
            kotlin.srcDirs = ['./src', '../src', '../parser/src']
        }
    }
}
